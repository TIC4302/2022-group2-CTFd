---
name: CTFd Main CI

on:
  push:
    branches: [sub-test]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d

  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2 
      - 
        name: Exclude paths
        run: |
          mkdir -p logs/
          echo 'CTFd/themes/' >> logs/exclude.txt
          echo 'CHANGELOG.md' >> logs/exclude.txt
          echo 'CTFd/utils/security/sanitize.py' >> logs/exclude.txt
          echo 'tests/users/test_auth.py' >> logs/exclude.txt
          echo 'tests/utils/test_email.py' >> logs/exclude.txt
          echo 'tests/api/v1/test_files.py' >> logs/exclude.txt
          echo 'tests/utils/test_encoding.py' >> logs/exclude.txt
          echo 'tests/utils/test_passwords.py' >> logs/exclude.txt
          echo 'yarn.lock' >> logs/exclude.txt
      -
        name: Find secrets
        uses: max/secret-scan@master
        with:
          exclude_path: 'logs/exclude.txt'

  sca:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2   
      - 
        name: Create logs directory
        run: |
          mkdir -p logs/
      - 
        name: Python Safety
        run: |
          pip install safety
          safety check -r requirements.txt > logs/safety.txt
      - 
        name: Pyraider
        run: |
          pip install pyraider
          pyraider check -f requirements.txt > logs/pyraider.txt
      - 
        name: Upload python safety check results
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            logs/safety.txt
            logs/pyraider.txt
  
  sast:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - run: |
          mkdir -p logs/ 

      - uses: jpetrucciani/bandit-check@master
        with:
          path: '.'
          bandit_flags: '-lll -o logs/output.json -f json'

      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/output.json
  