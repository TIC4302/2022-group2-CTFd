---
name: CTFd Main CI

on:
  push:
    branches: [sub-DY]

env:
  DEP_PATH: requirements.txt
    
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d

  SecretScan:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2 
      - 
        name: Exclude paths
        run: |
          mkdir -p logs/
          echo 'CTFd/themes/' >> logs/exclude.txt
          echo 'CHANGELOG.md' >> logs/exclude.txt
          echo 'CTFd/utils/security/sanitize.py' >> logs/exclude.txt
          echo 'tests/users/test_auth.py' >> logs/exclude.txt
          echo 'tests/utils/test_email.py' >> logs/exclude.txt
          echo 'tests/api/v1/test_files.py' >> logs/exclude.txt
          echo 'tests/utils/test_encoding.py' >> logs/exclude.txt
          echo 'tests/utils/test_passwords.py' >> logs/exclude.txt
          echo 'yarn.lock' >> logs/exclude.txt
      -
        name: Find secrets
        uses: max/secret-scan@master
        with:
          exclude_path: 'logs/exclude.txt'

  PythonSafety:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master  
      - 
        name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - 
        name: Install Safety    
        run: pip install safety
      - 
        name: Create logs file
        run: mkdir -p logs/
      - 
        name: Run Safety Check
        run: safety check -r requirements.txt --full-report -i 40459 -i 42194 > logs/safety-logs.txt
      - 
        name: Upload logs  
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/safety-logs.txt

  Pyraider:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@master 
      - 
        name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      -
        name: Install Pyraider
        run: pip install pyraider  
      -
        name: Create logs file
        run: mkdir -p logs/  
      -
        name: Run Pyraider Check
        run: pyraider check -f requirements.txt -e json logs/pyraider-logs.json
      -
        name: Upload logs
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/pyraider-logs.json
          
  BanditCheck:
    needs: [Build, PythonSafety]
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v2
      - 
        run: |
          mkdir -p logs/ 
      - 
        uses: jpetrucciani/bandit-check@master
        with:
          path: '.'
          bandit_flags: '-lll -o logs/output.json -f json'
      - 
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/output.json

  #need to fix the 'WARN' on creating user for the container
  ContainerScan:
    #needs: [test, sast]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Dockle for Nginx
        uses: erzz/dockle-action@v1.1.1
        with:
          image: nginx:1.17
          report-format: json
          report-name: dockle-report-nginx
      - 
        name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Dockle Report
          path: dockle-report-nginx.json
      - 
        name: Dockle for MariaDB
        uses: erzz/dockle-action@v1.1.1
        with:
          image: mariadb:10.4.12
          report-format: json
          report-name: dockle-report-mariadb
      - 
        name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Dockle Report
          path: dockle-report-mariadb.json
      - 
        name: Dockle for Redis
        uses: erzz/dockle-action@v1.1.1
        with:
          image: redis:4
          report-format: json
          report-name: dockle-report-redis      
      - 
        name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Dockle Report
          path: dockle-report-redis.json        

  Trivy:
    runs-on: ubuntu-latest
    steps:
      -
        name: Trivy Scan for Nginx
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: nginx:latest #nginx:1.17
          format: json
          ignore-unfixed: true
          vuln-type: os,library
          output: trivy-report-nginx.json
      - 
        name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Trivy Scan Report
          path: trivy-report-nginx.json
      -
        name: Trivy Scan for MariaDB
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: mariadb:latest #mariadb:10.4.12
          format: json
          ignore-unfixed: true
          vuln-type: os,library
          output: trivy-report-mariadb.json
          #severity: 'CRITICAL,HIGH'
      - 
        name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Trivy Scan Report
          path: trivy-report-mariadb.json
      -
        name: Trivy Scan for Redis
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: redis:latest #redis:4
          format: json
          ignore-unfixed: true
          vuln-type: os,library
          output: trivy-report-redis.json
          #severity: 'CRITICAL,HIGH'
      - 
        name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Trivy Scan Report
          path: trivy-report-redis.json   
          